static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 20000
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          codec_type: AUTO
          stat_prefix: health 
          use_remote_address: true
          route_config:
            name: health 
            virtual_hosts:
            - name: all
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                direct_response:
                  status: 200
                  body:
                    inline_string: "success"
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 80
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: AUTO
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          stat_prefix: egress_http
          common_http_protocol_options:
            idle_timeout: 840s
          use_remote_address: true
          route_config:
            name: proxy 
            request_headers_to_remove:
            - "Slime-Orig-Dest"
            virtual_hosts:
            - name: all
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: original_dst_cluster 
          http_filters:
          - name: envoy.filters.http.lua
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
              default_source_code:
                inline_string:
                  function insert_namespace(host, namespace)
                    if string.find(host, '%.') then
                      return host
                    end
                    if not namespace or namespace == '' then
                      return host
                    end
                    local idx = string.find(host, ':')
                    if idx then
                      local prefix = string.sub(host, 1, idx-1)
                      local suffix = string.sub(host, idx)
                      return prefix .. "." .. namespace .. suffix
                    end
                    return host .. '.' .. namespace
                  end

                  function envoy_on_request(request_handle)
                    local sourceNs = request_handle:headers():get("Slime-Source-Ns")
                    local reqHost = request_handle:headers():get(":authority")
                    reqHost = insert_namespace(reqHost, sourceNs)
                    request_handle:headers():replace(":authority", reqHost)
                  end
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
  - cleanupInterval: 8640000s
    connectTimeout: 10s
    lbPolicy: CLUSTER_PROVIDED
    name: original_dst_cluster 
    type: ORIGINAL_DST
    original_dst_lb_config:
      use_http_header: true
      http_header_name: "Slime-Orig-Dest"
    typedExtensionProtocolOptions:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        '@type': type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        useDownstreamProtocolConfig:
          http2ProtocolOptions:
            maxConcurrentStreams: 1073741824
          httpProtocolOptions: {}


